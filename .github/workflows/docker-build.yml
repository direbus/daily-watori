name: Build and Publish Docker image

on:
  schedule:
    - cron: "0 10 * * *" # everyday at 10am
  release:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: ${{ secrets.DOCKERHUB_NAME }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v2.1.3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-deps-${{ hashFiles('package-lock.json') }}

      - name: Build & flattening node app
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm ci
          npm run build

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            NODE_ENV=production

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
